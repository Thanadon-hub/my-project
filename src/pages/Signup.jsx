// pages/Signup.jsx
import React from "react";
import { useState } from "react";
import { auth, db } from "../firebase";
import { createUserWithEmailAndPassword } from "firebase/auth";
import { doc, setDoc, serverTimestamp } from "firebase/firestore";
import { useNavigate } from "react-router-dom";
import "./Signup.css";

export default function Signup() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [name, setName] = useState("");
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate();

  const handleSignup = async (e) => {
    e.preventDefault();
    
    if (password.length < 6) {
      alert("р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╕Хр╣Йр╕нр╕Зр╕бр╕╡р╕Др╕зр╕▓р╕бр╕вр╕▓р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Щр╣Йр╕нр╕в 6 р╕Хр╕▒р╕зр╕нр╕▒р╕Бр╕йр╕г");
      return;
    }

    setLoading(true);
    
    try {
      // р╕кр╕гр╣Йр╕▓р╕З user account
      const userCredential = await createUserWithEmailAndPassword(auth, email, password);
      const user = userCredential.user;
      
      // р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕е user р╣Гр╕Щ Firestore р╕Юр╕гр╣Йр╕нр╕б role
      await setDoc(doc(db, "users", user.uid), {
        uid: user.uid,
        email: user.email,
        name: name || "р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ",
        role: "user", // р╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Гр╕лр╕бр╣Ир╕Ир╕░р╣Ар╕Ыр╣Зр╕Щ user р╕Чр╕▒р╣Йр╕Зр╕лр╕бр╕Ф
        createdAt: serverTimestamp(),
        lastLogin: serverTimestamp()
      });

      console.log("р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕кр╕│р╣Ар╕гр╣Зр╕И: ", user.email);
      navigate("/");
      
    } catch (error) {
      console.error("Signup error:", error);
      
      // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Ар╕Ыр╣Зр╕Щр╕ар╕▓р╕йр╕▓р╣Др╕Чр╕в
      let errorMessage = "р╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И";
      
      switch (error.code) {
        case 'auth/email-already-in-use':
          errorMessage = "р╕нр╕╡р╣Ар╕бр╕ер╕Щр╕╡р╣Йр╕Цр╕╣р╕Бр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╣Бр╕ер╣Йр╕з";
          break;
        case 'auth/invalid-email':
          errorMessage = "р╕гр╕╣р╕Ыр╣Бр╕Ър╕Ър╕нр╕╡р╣Ар╕бр╕ер╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З";
          break;
        case 'auth/weak-password':
          errorMessage = "р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щр╣Др╕бр╣Ир╣Бр╕Вр╣Зр╕Зр╣Бр╕гр╕Зр╕Юр╕н";
          break;
        default:
          errorMessage = error.message;
      }
      
      alert(errorMessage);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="signup-container">
      <form onSubmit={handleSignup} className="signup-form">
        <h2 className="signup-title">р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б</h2>
        
        <input
          type="text"
          placeholder="р╕Кр╕╖р╣Ир╕н-р╕Щр╕▓р╕бр╕кр╕Бр╕╕р╕е (р╣Др╕бр╣Ир╕Ър╕▒р╕Зр╕Др╕▒р╕Ъ)"
          value={name}
          onChange={(e) => setName(e.target.value)}
          className="signup-input"
        />
        
        <input
          type="email"
          placeholder="р╕нр╕╡р╣Ар╕бр╕е"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="signup-input"
          required
        />
        
        <input
          type="password"
          placeholder="р╕гр╕лр╕▒р╕кр╕Ьр╣Ир╕▓р╕Щ (р╕Вр╕▒р╣Йр╕Щр╕Хр╣Ир╕│ 6 р╕Хр╕▒р╕з)"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          className="signup-input"
          required
          minLength={6}
        />
        
        <button 
          type="submit" 
          className="signup-button"
          disabled={loading}
        >
          {loading ? "р╕Бр╕│р╕ер╕▒р╕Зр╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б..." : "р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б"}
        </button>
        
        <p className="signup-footer">
          р╕бр╕╡р╕Ър╕▒р╕Нр╕Кр╕╡р╣Бр╕ер╣Йр╕з? <a href="/login">р╣Ар╕Вр╣Йр╕▓р╕кр╕╣р╣Ир╕гр╕░р╕Ър╕Ъ</a>
        </p>
        
        <div style={{ marginTop: '20px', fontSize: '0.9rem', color: '#666', textAlign: 'center' }}>
          ЁЯТб р╕лр╕бр╕▓р╕вр╣Ар╕лр╕Хр╕╕: р╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Гр╕лр╕бр╣Ир╕Ир╕░р╕бр╕╡р╕кр╕┤р╕Чр╕Шр╕┤р╣Мр╣Ар╕Ыр╣Зр╕Щ "р╕Ьр╕╣р╣Йр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕Чр╕▒р╣Ир╕зр╣Др╕Ы" <br/>
          р╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Фр╕╣р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Бр╕ер╕░р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╣Др╕Фр╣Й р╣Бр╕Хр╣Ир╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Бр╕Бр╣Йр╣Др╕Вр╣Др╕Фр╣Й
        </div>
      </form>
    </div>
  );
}